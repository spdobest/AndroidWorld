apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: "androidx.navigation.safeargs"

// Creates a variable called keystorePropertiesFile, and initializes it to the
// keystore.properties file.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initializes a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Loads the keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "spm.androidworld.all"
        minSdkVersion 24
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"


        // Creates a property for the FileProvider authority.
        def filesAuthorityValue = applicationId + ".files"
        // Creates a placeholder property to use in the manifest.
        manifestPlaceholders =
                [filesAuthority: filesAuthorityValue]
        // Adds a new field for the authority to the BuildConfig class.
        buildConfigField("String",
                "FILES_AUTHORITY",
                "\"${filesAuthorityValue}\"")

    }

    signingConfigs {
        // Creates a signing configuration called "release".

        config {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }

        release {
            // Specifies the path to your keystore file.
            storeFile file("my-release-key.jks")
            // Specifies the password for your keystore.
            storePassword "password"
            // Specifies the identifying name for your key.
            keyAlias "my-alias"
            // Specifies the password for your key.
            keyPassword "password"
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            applicationIdSuffix ".debug"
            debuggable true
        }

        /**
         * The `initWith` property allows you to copy configurations from other build types,
         * then configure only the settings you want to change. This one copies the debug build
         * type, and then changes the manifest placeholder and application ID.
         */
        staging {
            initWith debug
            manifestPlaceholders = [hostName: "internal.example.com"]
            applicationIdSuffix ".debugStaging"
        }
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"
    productFlavors {
        demo {
            // Assigns this product flavor to the "version" flavor dimension.
            // If you are using only one dimension, this property is optional,
            // and the plugin automatically assigns all the module's flavors to
            // that dimension.
            dimension "version"
            applicationIdSuffix ".demo"
            versionNameSuffix "-demo"
        }
        full {
            dimension "version"
            applicationIdSuffix ".full"
            versionNameSuffix "-full"
        }
    }

    lintOptions {
        // Turns off checks for the issue IDs you specify.
        disable 'TypographyFractions', 'TypographyQuotes'
        // Turns on checks for the issue IDs you specify. These checks are in
        // addition to the default lint checks.
        enable 'RtlHardcoded', 'RtlCompat', 'RtlEnabled'
        // To enable checks for only a subset of issue IDs and ignore all others,
        // list the issue IDs with the 'check' property instead. This property overrides
        // any issue IDs you enable or disable using the properties above.
        check 'NewApi', 'InlinedApi'
        // If set to true, turns off analysis progress reporting by lint.
        quiet true
        // if set to true (default), stops the build if errors are found.
        abortOnError false
        // if true, only report errors.
        ignoreWarnings true
    }
    /**
     * DATA BINDING
     */
    dataBinding.enabled = true
    androidExtensions {
        experimental = true
    }
}

dependencies {
    /**
     * GET ALL ANDROIDX DEPENDENCIES HERE
     * https://developer.android.com/jetpack/androidx/migrate
     */
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.google.android.material:material:1.2.0-alpha06'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.2.0-alpha06'


    /**
     * RETROFIT 2
     */
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'


    /**
     * FIREBASE dependencies yet to add
     */
    implementation 'com.google.firebase:firebase-core:17.4.1'
    // Cloud Messaging
    implementation 'com.google.firebase:firebase-messaging:20.1.7'
    // realtime database
    implementation 'com.google.firebase:firebase-database:19.3.0'
    // Add the Firebase SDK for Google Analytics
    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    // APP Indexing
    implementation 'com.google.firebase:firebase-appindexing:19.1.0'
    // AUtnentication
    implementation 'com.google.firebase:firebase-auth:19.3.1'
    // cloud firestore
    implementation 'com.google.firebase:firebase-firestore:21.4.3'
    // cloud function for firestore
    implementation 'com.google.firebase:firebase-functions:19.0.2'
    // Crashlytics
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0'
    // Dynamic Links
    implementation 'com.google.firebase:firebase-dynamic-links:19.1.0'
    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    implementation 'com.google.firebase:firebase-analytics:17.4.1'
    // app indexing
    // Glide
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    /**
     * TO ADD MORE ML FIREBASE DEPENDENCIES , USE BELOW LINK
     *  https://firebase.google.com/docs/android/setup
     */


    implementation 'com.google.android.gms:play-services-location:17.0.0'
}
apply plugin: 'com.google.gms.google-services'
